name: "publish"

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          #   - platform: "macos-latest" # for Arm based macs (M1 and above).
          #     args: "--target aarch64-apple-darwin"
          #   - platform: "macos-latest" # for Intel based macs.
          #     args: "--target x86_64-apple-darwin"
          #   - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #     args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install pnpm
        run: npm install -g pnpm

      - name: install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v${{ github.ref_name }}" # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "Release of App v${{ github.ref_name }}" # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
